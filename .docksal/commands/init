#!/usr/bin/env bash

## Initialize Docksal powered Drupal 8 site
##
## Usage: fin init

# Abort if anything fails
set -e

#-------------------------- Settings --------------------------------

# $PROJECT_ROOT is passed down from fin to any custom command
DOCROOT='docroot'
DOCROOT_PATH="$PROJECT_ROOT/$DOCROOT"
# Set to the appropriate site directory
SITE_DIRECTORY='default'
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"
# Set to the appropriate site domain
SITE_DOMAIN='openy.docksal'
SITE_THEME_NAME="tb_theme"

SERVER_SITE_ROOT='/var/www'
SERVER_DOCROOT_PATH="$SERVER_SITE_ROOT/$DOCROOT"

SITE_THEME_PATH="${DOCROOT_PATH}/themes/custom/${SITE_THEME_NAME}"

#-------------------------- END: Settings --------------------------------


#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

if_failed ()
{
	if [ ! $? -eq 0 ]; then
		if [[ "$1" == "" ]]; then msg="an error occurred"; else msg="$1"; fi
		echo-red "$msg";
		exit 1;
	fi
}

is_windows ()
{
	local res=$(uname | grep 'CYGWIN_NT')
	if [[ "$res" != "" ]]; then
		return 0
	else
		return 1
	fi
}

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
    local source="$1"
    local dest="$2"

    if [[ ! -f $dest ]]; then
        echo "Copying ${dest}..."
        echo "${source} ${dest}"
        cp $source $dest
    else
        echo-yellow "${dest} already in place."
    fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Functions --------------------------------

# Initialize local settings files
init_settings ()
{
	# Copy from settings templates
	# copy_settings_file "${PROJECT_ROOT}/default.settings.local.php" "${SITEDIR_PATH}/settings.local.php"
        echo 'Copied files'
}

# Set file/folder permissions
file_permissions ()
{
    mkdir -p "$DOCROOT_PATH/sites/$SITE_DIRECTORY/files"
    chmod 777 "$DOCROOT_PATH/sites/$SITE_DIRECTORY/files"
}

# Install site
site_install ()
{
    chmod -R a+w "$DOCROOT_PATH/sites/default"

    echo-green "Install site from the profile"
    fin drush si -y openy --account-pass=admin --db-url="mysql://drupal:drupal@db:3306/drupal"  --root="$SERVER_DOCROOT_PATH"
#
#    echo-green "Add 'administrator' role to user 1"
#    fin drush user-add-role "administrator" 1 --root="$SERVER_DOCROOT_PATH"
#
#    echo-green "Clear caches"
#    # Clear cache.
#    fin drush cr --root="$SERVER_DOCROOT_PATH"
}

#-------------------------- END: Functions --------------------------------

#-------------------------- Execution --------------------------------

if [[ "$PROJECT_ROOT" == "" ]]; then
	echo-red "\$PROJECT_ROOT is not set"
	exit 1
fi

#echo-green "Setting file/folder permissions..."
#file_permissions

echo -e "${green_bg} Step 1 ${NC}${green} Initializing local project configuration...${NC}"
init_settings


if [[ $DOCKER_RUNNING == "true" ]]; then
	echo -e "${green_bg} Step 2 ${NC}${green} Recreating services...${NC}"
	fin reset -f
else
	echo -e "${green_bg} Step 2 ${NC}${green} Creating services...${NC}"
	fin up
fi
echo "Waiting 5s for MySQL to start...";
sleep 5

echo -e "${green_bg} Step 3 ${NC}${green} Installing site...${NC}"
time site_install

if is_windows; then
	echo-green "Add ${VIRTUAL_HOST} to your hosts file (/etc/hosts), e.g.:"
	echo-green "192.168.64.100  ${VIRTUAL_HOST}"
	echo
fi

echo -en "${green_bg} DONE! ${NC} "
echo -e "Open ${yellow}http://${SITE_DOMAIN}${NC} in your browser to verify the setup."
echo -e "Open ${yellow}http://webmail.${SITE_DOMAIN}${NC} for Mailhog."

#-------------------------- END: Execution --------------------------------
